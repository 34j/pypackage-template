# questions
project_name:
  type: str
  help: "Project Name (human readable version)"
  default: '{{ "exec(''import sys'') or sys.argv[-1]" | eval | capitalize | replace("-", " ") }}'

project_short_description:
  type: str
  help: "A short description of the project"
  default: "Python package for "

has_cli:
  type: bool
  help: "Does the project have a CLI?"
  default: no

cli_name:
  type: str
  help: "The name of the CLI"
  default: "{{ project_slug }}"
  when: "{{ has_cli }}"

full_name:
  type: str
  help: "What's your name?"
  default: "{{ '' | env ('NAME')}}"

email:
  type: str
  help: "Email address"
  default: "{{ '' | env('EMAIL') }}"

github_username:
  type: str
  help: "GitHub Username"
  default: "{{ full_name | env('GITHUB_USER') }}"

project_slug:
  type: str
  help: "Project slug (used for GitHub, PyPI, etc.)"
  default: "{{ project_name.lower().replace(' ', '-') }}"

package_name:
  type: str
  help: "The name of the main Python package (should be a valid Python identifier)"
  default: "{{ project_slug.replace('-', '_') }}"

open_source_license:
  type: str
  help: "The open source license to use"
  choices:
    - "MIT"
    - "Apache Software License 2.0"
    - "GNU General Public License v3"
    - "Not open source"

copyright_year:
  type: str
  help: "Copyright year(s)"
  default: "{% now 'utc', '%Y' %}"

documentation:
  type: bool
  help: "Generate documentation?"
  default: yes

setup_venv:
  type: bool
  help: "Setup a virtual environment?"
  default: yes

venv_version:
  type: str
  help: "Python version for the virtual environment"
  default: "3.11"
  when: "{{ setup_venv }}"

run_poetry_install:
  type: bool
  help: "Run poetry install after {{ package_name }} generation?"
  default: yes
  when: "{{ setup_venv }}"

initial_commit:
  type: bool
  help: "Create an initial commit with the generated {{ package_name }}?"
  default: yes

setup_github:
  type: bool
  help: "Setup GitHub repository (requires gh CLI)?"
  default: yes
  when: "{{ initial_commit }}"

setup_pre_commit:
  type: bool
  help: "Setup pre-commit hooks (requires pre-commit)?"
  default: yes
  when: "{{ setup_venv }}"

add_me_as_contributor:
  type: bool
  help: "Add me as a contributor?"
  default: no
  when: "{{ initial_commit }}"

open_with_vscode:
  type: bool
  help: "Open with VSCode?"
  default: yes

# Copier metadata
_min_copier_version: "9.0.0"
_subdirectory: "project"
_tasks:
  # In Windows, command prompt
  # Remove license file if no license
  - "{% if open_source_license == 'Not open source' %}rm LICENSE{% endif %}"
  # Cleanup docs
  - "{% if not documentation %}rm -rf docs .readthedocs.yml{% endif %}"
  # Setup venv
  - "{% if setup_venv %}{% if 'Windows' in ''|env('OS') %}py -{% else %}python{% endif %}{{ venv_version }} -m venv venv{% endif %}"
  # Run poetry install
  - "{% if 'Windows' in ''|env('OS') %}{% set venv_folder = 'venv\\\\scripts\\\\' %}{% else %}{% set venv_folder = 'venv/bin/' %}{% endif %}
    {% if run_poetry_install %}{{ venv_folder }}python -m pip install -U pip setuptools wheel && {{ venv_folder }}pip install -U poetry pre-commit && {{ venv_folder }}python -m poetry install --with dev{% endif %}"
  # git init
  - "git init && git add ."
  # Setup pre-commit
  - "{% if 'Windows' in ''|env('OS') %}{% set venv_folder = 'venv\\\\scripts\\\\' %}{% else %}{% set venv_folder = 'venv/bin/' %}{% endif %}
    {% if setup_pre_commit %}{{ venv_folder }}pre-commit install && {{ venv_folder }}pre-commit run -a || git add .{% endif %}"
  # Initial commit
  - '{% if initial_commit %}git add . && git commit -m "chore: initial commit"{% endif %}'
  # Add me as a contributor
  - "{% if add_me_as_contributor %}npx all-contributors-cli add {{ github_username }} code,ideas,doc{% endif %}"
  # Setup GitHub
  - '{% if setup_github %}{% if ''Windows'' in ''''|env(''OS'') %}"C:/Program Files/Git/bin/bash"{% else %}bash{% endif %} .github/setup-github.bash {{ github_username }} {{ project_slug }} "{{ project_short_description }}"{% endif %}'
  # Open with vscode
  - "{% if open_with_vscode %}code . || echo 'VSCode is not installed.'{% endif %}"
  # Replace true with false in .copier-answers.yml except "documentation: true" for faster copier update
  # setup-..., initial_commit, add_me_as_contributor, open_with_vscode must be false
  - 'python -c "from pathlib import Path; import re; p = Path(''.copier-answers.yml''); p.write_text(re.sub(r''(setup_venv|setup_github|setup_pre_commit|run_poetry_install|initial_commit|add_me_as_contributor|open_with_vscode): true'', r''\1: false'', p.read_text()))"'
_jinja_extensions:
  - jinja2_time.TimeExtension
  - jinja2_eval.EvalExtension
  - jinja2_env.EnvExtension
